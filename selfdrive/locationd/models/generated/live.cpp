#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.10.1                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8847127420563689055) {
   out_8847127420563689055[0] = 0;
   out_8847127420563689055[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8847127420563689055[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8847127420563689055[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8847127420563689055[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8847127420563689055[5] = -sin(in_vec[1]);
   out_8847127420563689055[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8847127420563689055[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8847127420563689055[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8847127420563689055[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8847127420563689055[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8847127420563689055[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8847127420563689055[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8847127420563689055[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8847127420563689055[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8847127420563689055[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8847127420563689055[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8847127420563689055[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_4701037009460637038) {
   out_4701037009460637038[0] = delta_x[0] + nom_x[0];
   out_4701037009460637038[1] = delta_x[1] + nom_x[1];
   out_4701037009460637038[2] = delta_x[2] + nom_x[2];
   out_4701037009460637038[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_4701037009460637038[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_4701037009460637038[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_4701037009460637038[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_4701037009460637038[7] = delta_x[6] + nom_x[7];
   out_4701037009460637038[8] = delta_x[7] + nom_x[8];
   out_4701037009460637038[9] = delta_x[8] + nom_x[9];
   out_4701037009460637038[10] = delta_x[9] + nom_x[10];
   out_4701037009460637038[11] = delta_x[10] + nom_x[11];
   out_4701037009460637038[12] = delta_x[11] + nom_x[12];
   out_4701037009460637038[13] = delta_x[12] + nom_x[13];
   out_4701037009460637038[14] = delta_x[13] + nom_x[14];
   out_4701037009460637038[15] = delta_x[14] + nom_x[15];
   out_4701037009460637038[16] = delta_x[15] + nom_x[16];
   out_4701037009460637038[17] = delta_x[16] + nom_x[17];
   out_4701037009460637038[18] = delta_x[17] + nom_x[18];
   out_4701037009460637038[19] = delta_x[18] + nom_x[19];
   out_4701037009460637038[20] = delta_x[19] + nom_x[20];
   out_4701037009460637038[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7553325162373803668) {
   out_7553325162373803668[0] = -nom_x[0] + true_x[0];
   out_7553325162373803668[1] = -nom_x[1] + true_x[1];
   out_7553325162373803668[2] = -nom_x[2] + true_x[2];
   out_7553325162373803668[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7553325162373803668[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7553325162373803668[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7553325162373803668[6] = -nom_x[7] + true_x[7];
   out_7553325162373803668[7] = -nom_x[8] + true_x[8];
   out_7553325162373803668[8] = -nom_x[9] + true_x[9];
   out_7553325162373803668[9] = -nom_x[10] + true_x[10];
   out_7553325162373803668[10] = -nom_x[11] + true_x[11];
   out_7553325162373803668[11] = -nom_x[12] + true_x[12];
   out_7553325162373803668[12] = -nom_x[13] + true_x[13];
   out_7553325162373803668[13] = -nom_x[14] + true_x[14];
   out_7553325162373803668[14] = -nom_x[15] + true_x[15];
   out_7553325162373803668[15] = -nom_x[16] + true_x[16];
   out_7553325162373803668[16] = -nom_x[17] + true_x[17];
   out_7553325162373803668[17] = -nom_x[18] + true_x[18];
   out_7553325162373803668[18] = -nom_x[19] + true_x[19];
   out_7553325162373803668[19] = -nom_x[20] + true_x[20];
   out_7553325162373803668[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_845521510415997869) {
   out_845521510415997869[0] = 1.0;
   out_845521510415997869[1] = 0;
   out_845521510415997869[2] = 0;
   out_845521510415997869[3] = 0;
   out_845521510415997869[4] = 0;
   out_845521510415997869[5] = 0;
   out_845521510415997869[6] = 0;
   out_845521510415997869[7] = 0;
   out_845521510415997869[8] = 0;
   out_845521510415997869[9] = 0;
   out_845521510415997869[10] = 0;
   out_845521510415997869[11] = 0;
   out_845521510415997869[12] = 0;
   out_845521510415997869[13] = 0;
   out_845521510415997869[14] = 0;
   out_845521510415997869[15] = 0;
   out_845521510415997869[16] = 0;
   out_845521510415997869[17] = 0;
   out_845521510415997869[18] = 0;
   out_845521510415997869[19] = 0;
   out_845521510415997869[20] = 0;
   out_845521510415997869[21] = 0;
   out_845521510415997869[22] = 1.0;
   out_845521510415997869[23] = 0;
   out_845521510415997869[24] = 0;
   out_845521510415997869[25] = 0;
   out_845521510415997869[26] = 0;
   out_845521510415997869[27] = 0;
   out_845521510415997869[28] = 0;
   out_845521510415997869[29] = 0;
   out_845521510415997869[30] = 0;
   out_845521510415997869[31] = 0;
   out_845521510415997869[32] = 0;
   out_845521510415997869[33] = 0;
   out_845521510415997869[34] = 0;
   out_845521510415997869[35] = 0;
   out_845521510415997869[36] = 0;
   out_845521510415997869[37] = 0;
   out_845521510415997869[38] = 0;
   out_845521510415997869[39] = 0;
   out_845521510415997869[40] = 0;
   out_845521510415997869[41] = 0;
   out_845521510415997869[42] = 0;
   out_845521510415997869[43] = 0;
   out_845521510415997869[44] = 1.0;
   out_845521510415997869[45] = 0;
   out_845521510415997869[46] = 0;
   out_845521510415997869[47] = 0;
   out_845521510415997869[48] = 0;
   out_845521510415997869[49] = 0;
   out_845521510415997869[50] = 0;
   out_845521510415997869[51] = 0;
   out_845521510415997869[52] = 0;
   out_845521510415997869[53] = 0;
   out_845521510415997869[54] = 0;
   out_845521510415997869[55] = 0;
   out_845521510415997869[56] = 0;
   out_845521510415997869[57] = 0;
   out_845521510415997869[58] = 0;
   out_845521510415997869[59] = 0;
   out_845521510415997869[60] = 0;
   out_845521510415997869[61] = 0;
   out_845521510415997869[62] = 0;
   out_845521510415997869[63] = 0;
   out_845521510415997869[64] = 0;
   out_845521510415997869[65] = 0;
   out_845521510415997869[66] = -0.5*state[4];
   out_845521510415997869[67] = -0.5*state[5];
   out_845521510415997869[68] = -0.5*state[6];
   out_845521510415997869[69] = 0;
   out_845521510415997869[70] = 0;
   out_845521510415997869[71] = 0;
   out_845521510415997869[72] = 0;
   out_845521510415997869[73] = 0;
   out_845521510415997869[74] = 0;
   out_845521510415997869[75] = 0;
   out_845521510415997869[76] = 0;
   out_845521510415997869[77] = 0;
   out_845521510415997869[78] = 0;
   out_845521510415997869[79] = 0;
   out_845521510415997869[80] = 0;
   out_845521510415997869[81] = 0;
   out_845521510415997869[82] = 0;
   out_845521510415997869[83] = 0;
   out_845521510415997869[84] = 0;
   out_845521510415997869[85] = 0;
   out_845521510415997869[86] = 0;
   out_845521510415997869[87] = 0.5*state[3];
   out_845521510415997869[88] = 0.5*state[6];
   out_845521510415997869[89] = -0.5*state[5];
   out_845521510415997869[90] = 0;
   out_845521510415997869[91] = 0;
   out_845521510415997869[92] = 0;
   out_845521510415997869[93] = 0;
   out_845521510415997869[94] = 0;
   out_845521510415997869[95] = 0;
   out_845521510415997869[96] = 0;
   out_845521510415997869[97] = 0;
   out_845521510415997869[98] = 0;
   out_845521510415997869[99] = 0;
   out_845521510415997869[100] = 0;
   out_845521510415997869[101] = 0;
   out_845521510415997869[102] = 0;
   out_845521510415997869[103] = 0;
   out_845521510415997869[104] = 0;
   out_845521510415997869[105] = 0;
   out_845521510415997869[106] = 0;
   out_845521510415997869[107] = 0;
   out_845521510415997869[108] = -0.5*state[6];
   out_845521510415997869[109] = 0.5*state[3];
   out_845521510415997869[110] = 0.5*state[4];
   out_845521510415997869[111] = 0;
   out_845521510415997869[112] = 0;
   out_845521510415997869[113] = 0;
   out_845521510415997869[114] = 0;
   out_845521510415997869[115] = 0;
   out_845521510415997869[116] = 0;
   out_845521510415997869[117] = 0;
   out_845521510415997869[118] = 0;
   out_845521510415997869[119] = 0;
   out_845521510415997869[120] = 0;
   out_845521510415997869[121] = 0;
   out_845521510415997869[122] = 0;
   out_845521510415997869[123] = 0;
   out_845521510415997869[124] = 0;
   out_845521510415997869[125] = 0;
   out_845521510415997869[126] = 0;
   out_845521510415997869[127] = 0;
   out_845521510415997869[128] = 0;
   out_845521510415997869[129] = 0.5*state[5];
   out_845521510415997869[130] = -0.5*state[4];
   out_845521510415997869[131] = 0.5*state[3];
   out_845521510415997869[132] = 0;
   out_845521510415997869[133] = 0;
   out_845521510415997869[134] = 0;
   out_845521510415997869[135] = 0;
   out_845521510415997869[136] = 0;
   out_845521510415997869[137] = 0;
   out_845521510415997869[138] = 0;
   out_845521510415997869[139] = 0;
   out_845521510415997869[140] = 0;
   out_845521510415997869[141] = 0;
   out_845521510415997869[142] = 0;
   out_845521510415997869[143] = 0;
   out_845521510415997869[144] = 0;
   out_845521510415997869[145] = 0;
   out_845521510415997869[146] = 0;
   out_845521510415997869[147] = 0;
   out_845521510415997869[148] = 0;
   out_845521510415997869[149] = 0;
   out_845521510415997869[150] = 0;
   out_845521510415997869[151] = 0;
   out_845521510415997869[152] = 0;
   out_845521510415997869[153] = 1.0;
   out_845521510415997869[154] = 0;
   out_845521510415997869[155] = 0;
   out_845521510415997869[156] = 0;
   out_845521510415997869[157] = 0;
   out_845521510415997869[158] = 0;
   out_845521510415997869[159] = 0;
   out_845521510415997869[160] = 0;
   out_845521510415997869[161] = 0;
   out_845521510415997869[162] = 0;
   out_845521510415997869[163] = 0;
   out_845521510415997869[164] = 0;
   out_845521510415997869[165] = 0;
   out_845521510415997869[166] = 0;
   out_845521510415997869[167] = 0;
   out_845521510415997869[168] = 0;
   out_845521510415997869[169] = 0;
   out_845521510415997869[170] = 0;
   out_845521510415997869[171] = 0;
   out_845521510415997869[172] = 0;
   out_845521510415997869[173] = 0;
   out_845521510415997869[174] = 0;
   out_845521510415997869[175] = 1.0;
   out_845521510415997869[176] = 0;
   out_845521510415997869[177] = 0;
   out_845521510415997869[178] = 0;
   out_845521510415997869[179] = 0;
   out_845521510415997869[180] = 0;
   out_845521510415997869[181] = 0;
   out_845521510415997869[182] = 0;
   out_845521510415997869[183] = 0;
   out_845521510415997869[184] = 0;
   out_845521510415997869[185] = 0;
   out_845521510415997869[186] = 0;
   out_845521510415997869[187] = 0;
   out_845521510415997869[188] = 0;
   out_845521510415997869[189] = 0;
   out_845521510415997869[190] = 0;
   out_845521510415997869[191] = 0;
   out_845521510415997869[192] = 0;
   out_845521510415997869[193] = 0;
   out_845521510415997869[194] = 0;
   out_845521510415997869[195] = 0;
   out_845521510415997869[196] = 0;
   out_845521510415997869[197] = 1.0;
   out_845521510415997869[198] = 0;
   out_845521510415997869[199] = 0;
   out_845521510415997869[200] = 0;
   out_845521510415997869[201] = 0;
   out_845521510415997869[202] = 0;
   out_845521510415997869[203] = 0;
   out_845521510415997869[204] = 0;
   out_845521510415997869[205] = 0;
   out_845521510415997869[206] = 0;
   out_845521510415997869[207] = 0;
   out_845521510415997869[208] = 0;
   out_845521510415997869[209] = 0;
   out_845521510415997869[210] = 0;
   out_845521510415997869[211] = 0;
   out_845521510415997869[212] = 0;
   out_845521510415997869[213] = 0;
   out_845521510415997869[214] = 0;
   out_845521510415997869[215] = 0;
   out_845521510415997869[216] = 0;
   out_845521510415997869[217] = 0;
   out_845521510415997869[218] = 0;
   out_845521510415997869[219] = 1.0;
   out_845521510415997869[220] = 0;
   out_845521510415997869[221] = 0;
   out_845521510415997869[222] = 0;
   out_845521510415997869[223] = 0;
   out_845521510415997869[224] = 0;
   out_845521510415997869[225] = 0;
   out_845521510415997869[226] = 0;
   out_845521510415997869[227] = 0;
   out_845521510415997869[228] = 0;
   out_845521510415997869[229] = 0;
   out_845521510415997869[230] = 0;
   out_845521510415997869[231] = 0;
   out_845521510415997869[232] = 0;
   out_845521510415997869[233] = 0;
   out_845521510415997869[234] = 0;
   out_845521510415997869[235] = 0;
   out_845521510415997869[236] = 0;
   out_845521510415997869[237] = 0;
   out_845521510415997869[238] = 0;
   out_845521510415997869[239] = 0;
   out_845521510415997869[240] = 0;
   out_845521510415997869[241] = 1.0;
   out_845521510415997869[242] = 0;
   out_845521510415997869[243] = 0;
   out_845521510415997869[244] = 0;
   out_845521510415997869[245] = 0;
   out_845521510415997869[246] = 0;
   out_845521510415997869[247] = 0;
   out_845521510415997869[248] = 0;
   out_845521510415997869[249] = 0;
   out_845521510415997869[250] = 0;
   out_845521510415997869[251] = 0;
   out_845521510415997869[252] = 0;
   out_845521510415997869[253] = 0;
   out_845521510415997869[254] = 0;
   out_845521510415997869[255] = 0;
   out_845521510415997869[256] = 0;
   out_845521510415997869[257] = 0;
   out_845521510415997869[258] = 0;
   out_845521510415997869[259] = 0;
   out_845521510415997869[260] = 0;
   out_845521510415997869[261] = 0;
   out_845521510415997869[262] = 0;
   out_845521510415997869[263] = 1.0;
   out_845521510415997869[264] = 0;
   out_845521510415997869[265] = 0;
   out_845521510415997869[266] = 0;
   out_845521510415997869[267] = 0;
   out_845521510415997869[268] = 0;
   out_845521510415997869[269] = 0;
   out_845521510415997869[270] = 0;
   out_845521510415997869[271] = 0;
   out_845521510415997869[272] = 0;
   out_845521510415997869[273] = 0;
   out_845521510415997869[274] = 0;
   out_845521510415997869[275] = 0;
   out_845521510415997869[276] = 0;
   out_845521510415997869[277] = 0;
   out_845521510415997869[278] = 0;
   out_845521510415997869[279] = 0;
   out_845521510415997869[280] = 0;
   out_845521510415997869[281] = 0;
   out_845521510415997869[282] = 0;
   out_845521510415997869[283] = 0;
   out_845521510415997869[284] = 0;
   out_845521510415997869[285] = 1.0;
   out_845521510415997869[286] = 0;
   out_845521510415997869[287] = 0;
   out_845521510415997869[288] = 0;
   out_845521510415997869[289] = 0;
   out_845521510415997869[290] = 0;
   out_845521510415997869[291] = 0;
   out_845521510415997869[292] = 0;
   out_845521510415997869[293] = 0;
   out_845521510415997869[294] = 0;
   out_845521510415997869[295] = 0;
   out_845521510415997869[296] = 0;
   out_845521510415997869[297] = 0;
   out_845521510415997869[298] = 0;
   out_845521510415997869[299] = 0;
   out_845521510415997869[300] = 0;
   out_845521510415997869[301] = 0;
   out_845521510415997869[302] = 0;
   out_845521510415997869[303] = 0;
   out_845521510415997869[304] = 0;
   out_845521510415997869[305] = 0;
   out_845521510415997869[306] = 0;
   out_845521510415997869[307] = 1.0;
   out_845521510415997869[308] = 0;
   out_845521510415997869[309] = 0;
   out_845521510415997869[310] = 0;
   out_845521510415997869[311] = 0;
   out_845521510415997869[312] = 0;
   out_845521510415997869[313] = 0;
   out_845521510415997869[314] = 0;
   out_845521510415997869[315] = 0;
   out_845521510415997869[316] = 0;
   out_845521510415997869[317] = 0;
   out_845521510415997869[318] = 0;
   out_845521510415997869[319] = 0;
   out_845521510415997869[320] = 0;
   out_845521510415997869[321] = 0;
   out_845521510415997869[322] = 0;
   out_845521510415997869[323] = 0;
   out_845521510415997869[324] = 0;
   out_845521510415997869[325] = 0;
   out_845521510415997869[326] = 0;
   out_845521510415997869[327] = 0;
   out_845521510415997869[328] = 0;
   out_845521510415997869[329] = 1.0;
   out_845521510415997869[330] = 0;
   out_845521510415997869[331] = 0;
   out_845521510415997869[332] = 0;
   out_845521510415997869[333] = 0;
   out_845521510415997869[334] = 0;
   out_845521510415997869[335] = 0;
   out_845521510415997869[336] = 0;
   out_845521510415997869[337] = 0;
   out_845521510415997869[338] = 0;
   out_845521510415997869[339] = 0;
   out_845521510415997869[340] = 0;
   out_845521510415997869[341] = 0;
   out_845521510415997869[342] = 0;
   out_845521510415997869[343] = 0;
   out_845521510415997869[344] = 0;
   out_845521510415997869[345] = 0;
   out_845521510415997869[346] = 0;
   out_845521510415997869[347] = 0;
   out_845521510415997869[348] = 0;
   out_845521510415997869[349] = 0;
   out_845521510415997869[350] = 0;
   out_845521510415997869[351] = 1.0;
   out_845521510415997869[352] = 0;
   out_845521510415997869[353] = 0;
   out_845521510415997869[354] = 0;
   out_845521510415997869[355] = 0;
   out_845521510415997869[356] = 0;
   out_845521510415997869[357] = 0;
   out_845521510415997869[358] = 0;
   out_845521510415997869[359] = 0;
   out_845521510415997869[360] = 0;
   out_845521510415997869[361] = 0;
   out_845521510415997869[362] = 0;
   out_845521510415997869[363] = 0;
   out_845521510415997869[364] = 0;
   out_845521510415997869[365] = 0;
   out_845521510415997869[366] = 0;
   out_845521510415997869[367] = 0;
   out_845521510415997869[368] = 0;
   out_845521510415997869[369] = 0;
   out_845521510415997869[370] = 0;
   out_845521510415997869[371] = 0;
   out_845521510415997869[372] = 0;
   out_845521510415997869[373] = 1.0;
   out_845521510415997869[374] = 0;
   out_845521510415997869[375] = 0;
   out_845521510415997869[376] = 0;
   out_845521510415997869[377] = 0;
   out_845521510415997869[378] = 0;
   out_845521510415997869[379] = 0;
   out_845521510415997869[380] = 0;
   out_845521510415997869[381] = 0;
   out_845521510415997869[382] = 0;
   out_845521510415997869[383] = 0;
   out_845521510415997869[384] = 0;
   out_845521510415997869[385] = 0;
   out_845521510415997869[386] = 0;
   out_845521510415997869[387] = 0;
   out_845521510415997869[388] = 0;
   out_845521510415997869[389] = 0;
   out_845521510415997869[390] = 0;
   out_845521510415997869[391] = 0;
   out_845521510415997869[392] = 0;
   out_845521510415997869[393] = 0;
   out_845521510415997869[394] = 0;
   out_845521510415997869[395] = 1.0;
   out_845521510415997869[396] = 0;
   out_845521510415997869[397] = 0;
   out_845521510415997869[398] = 0;
   out_845521510415997869[399] = 0;
   out_845521510415997869[400] = 0;
   out_845521510415997869[401] = 0;
   out_845521510415997869[402] = 0;
   out_845521510415997869[403] = 0;
   out_845521510415997869[404] = 0;
   out_845521510415997869[405] = 0;
   out_845521510415997869[406] = 0;
   out_845521510415997869[407] = 0;
   out_845521510415997869[408] = 0;
   out_845521510415997869[409] = 0;
   out_845521510415997869[410] = 0;
   out_845521510415997869[411] = 0;
   out_845521510415997869[412] = 0;
   out_845521510415997869[413] = 0;
   out_845521510415997869[414] = 0;
   out_845521510415997869[415] = 0;
   out_845521510415997869[416] = 0;
   out_845521510415997869[417] = 1.0;
   out_845521510415997869[418] = 0;
   out_845521510415997869[419] = 0;
   out_845521510415997869[420] = 0;
   out_845521510415997869[421] = 0;
   out_845521510415997869[422] = 0;
   out_845521510415997869[423] = 0;
   out_845521510415997869[424] = 0;
   out_845521510415997869[425] = 0;
   out_845521510415997869[426] = 0;
   out_845521510415997869[427] = 0;
   out_845521510415997869[428] = 0;
   out_845521510415997869[429] = 0;
   out_845521510415997869[430] = 0;
   out_845521510415997869[431] = 0;
   out_845521510415997869[432] = 0;
   out_845521510415997869[433] = 0;
   out_845521510415997869[434] = 0;
   out_845521510415997869[435] = 0;
   out_845521510415997869[436] = 0;
   out_845521510415997869[437] = 0;
   out_845521510415997869[438] = 0;
   out_845521510415997869[439] = 1.0;
   out_845521510415997869[440] = 0;
   out_845521510415997869[441] = 0;
   out_845521510415997869[442] = 0;
   out_845521510415997869[443] = 0;
   out_845521510415997869[444] = 0;
   out_845521510415997869[445] = 0;
   out_845521510415997869[446] = 0;
   out_845521510415997869[447] = 0;
   out_845521510415997869[448] = 0;
   out_845521510415997869[449] = 0;
   out_845521510415997869[450] = 0;
   out_845521510415997869[451] = 0;
   out_845521510415997869[452] = 0;
   out_845521510415997869[453] = 0;
   out_845521510415997869[454] = 0;
   out_845521510415997869[455] = 0;
   out_845521510415997869[456] = 0;
   out_845521510415997869[457] = 0;
   out_845521510415997869[458] = 0;
   out_845521510415997869[459] = 0;
   out_845521510415997869[460] = 0;
   out_845521510415997869[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8787986898054269099) {
   out_8787986898054269099[0] = dt*state[7] + state[0];
   out_8787986898054269099[1] = dt*state[8] + state[1];
   out_8787986898054269099[2] = dt*state[9] + state[2];
   out_8787986898054269099[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8787986898054269099[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8787986898054269099[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8787986898054269099[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8787986898054269099[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8787986898054269099[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8787986898054269099[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8787986898054269099[10] = state[10];
   out_8787986898054269099[11] = state[11];
   out_8787986898054269099[12] = state[12];
   out_8787986898054269099[13] = state[13];
   out_8787986898054269099[14] = state[14];
   out_8787986898054269099[15] = state[15];
   out_8787986898054269099[16] = state[16];
   out_8787986898054269099[17] = state[17];
   out_8787986898054269099[18] = state[18];
   out_8787986898054269099[19] = state[19];
   out_8787986898054269099[20] = state[20];
   out_8787986898054269099[21] = state[21];
}
void F_fun(double *state, double dt, double *out_6474961616426700684) {
   out_6474961616426700684[0] = 1;
   out_6474961616426700684[1] = 0;
   out_6474961616426700684[2] = 0;
   out_6474961616426700684[3] = 0;
   out_6474961616426700684[4] = 0;
   out_6474961616426700684[5] = 0;
   out_6474961616426700684[6] = dt;
   out_6474961616426700684[7] = 0;
   out_6474961616426700684[8] = 0;
   out_6474961616426700684[9] = 0;
   out_6474961616426700684[10] = 0;
   out_6474961616426700684[11] = 0;
   out_6474961616426700684[12] = 0;
   out_6474961616426700684[13] = 0;
   out_6474961616426700684[14] = 0;
   out_6474961616426700684[15] = 0;
   out_6474961616426700684[16] = 0;
   out_6474961616426700684[17] = 0;
   out_6474961616426700684[18] = 0;
   out_6474961616426700684[19] = 0;
   out_6474961616426700684[20] = 0;
   out_6474961616426700684[21] = 0;
   out_6474961616426700684[22] = 1;
   out_6474961616426700684[23] = 0;
   out_6474961616426700684[24] = 0;
   out_6474961616426700684[25] = 0;
   out_6474961616426700684[26] = 0;
   out_6474961616426700684[27] = 0;
   out_6474961616426700684[28] = dt;
   out_6474961616426700684[29] = 0;
   out_6474961616426700684[30] = 0;
   out_6474961616426700684[31] = 0;
   out_6474961616426700684[32] = 0;
   out_6474961616426700684[33] = 0;
   out_6474961616426700684[34] = 0;
   out_6474961616426700684[35] = 0;
   out_6474961616426700684[36] = 0;
   out_6474961616426700684[37] = 0;
   out_6474961616426700684[38] = 0;
   out_6474961616426700684[39] = 0;
   out_6474961616426700684[40] = 0;
   out_6474961616426700684[41] = 0;
   out_6474961616426700684[42] = 0;
   out_6474961616426700684[43] = 0;
   out_6474961616426700684[44] = 1;
   out_6474961616426700684[45] = 0;
   out_6474961616426700684[46] = 0;
   out_6474961616426700684[47] = 0;
   out_6474961616426700684[48] = 0;
   out_6474961616426700684[49] = 0;
   out_6474961616426700684[50] = dt;
   out_6474961616426700684[51] = 0;
   out_6474961616426700684[52] = 0;
   out_6474961616426700684[53] = 0;
   out_6474961616426700684[54] = 0;
   out_6474961616426700684[55] = 0;
   out_6474961616426700684[56] = 0;
   out_6474961616426700684[57] = 0;
   out_6474961616426700684[58] = 0;
   out_6474961616426700684[59] = 0;
   out_6474961616426700684[60] = 0;
   out_6474961616426700684[61] = 0;
   out_6474961616426700684[62] = 0;
   out_6474961616426700684[63] = 0;
   out_6474961616426700684[64] = 0;
   out_6474961616426700684[65] = 0;
   out_6474961616426700684[66] = 1;
   out_6474961616426700684[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6474961616426700684[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_6474961616426700684[69] = 0;
   out_6474961616426700684[70] = 0;
   out_6474961616426700684[71] = 0;
   out_6474961616426700684[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6474961616426700684[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6474961616426700684[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6474961616426700684[75] = 0;
   out_6474961616426700684[76] = 0;
   out_6474961616426700684[77] = 0;
   out_6474961616426700684[78] = 0;
   out_6474961616426700684[79] = 0;
   out_6474961616426700684[80] = 0;
   out_6474961616426700684[81] = 0;
   out_6474961616426700684[82] = 0;
   out_6474961616426700684[83] = 0;
   out_6474961616426700684[84] = 0;
   out_6474961616426700684[85] = 0;
   out_6474961616426700684[86] = 0;
   out_6474961616426700684[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_6474961616426700684[88] = 1;
   out_6474961616426700684[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_6474961616426700684[90] = 0;
   out_6474961616426700684[91] = 0;
   out_6474961616426700684[92] = 0;
   out_6474961616426700684[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6474961616426700684[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6474961616426700684[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6474961616426700684[96] = 0;
   out_6474961616426700684[97] = 0;
   out_6474961616426700684[98] = 0;
   out_6474961616426700684[99] = 0;
   out_6474961616426700684[100] = 0;
   out_6474961616426700684[101] = 0;
   out_6474961616426700684[102] = 0;
   out_6474961616426700684[103] = 0;
   out_6474961616426700684[104] = 0;
   out_6474961616426700684[105] = 0;
   out_6474961616426700684[106] = 0;
   out_6474961616426700684[107] = 0;
   out_6474961616426700684[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_6474961616426700684[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_6474961616426700684[110] = 1;
   out_6474961616426700684[111] = 0;
   out_6474961616426700684[112] = 0;
   out_6474961616426700684[113] = 0;
   out_6474961616426700684[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6474961616426700684[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6474961616426700684[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6474961616426700684[117] = 0;
   out_6474961616426700684[118] = 0;
   out_6474961616426700684[119] = 0;
   out_6474961616426700684[120] = 0;
   out_6474961616426700684[121] = 0;
   out_6474961616426700684[122] = 0;
   out_6474961616426700684[123] = 0;
   out_6474961616426700684[124] = 0;
   out_6474961616426700684[125] = 0;
   out_6474961616426700684[126] = 0;
   out_6474961616426700684[127] = 0;
   out_6474961616426700684[128] = 0;
   out_6474961616426700684[129] = 0;
   out_6474961616426700684[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6474961616426700684[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_6474961616426700684[132] = 1;
   out_6474961616426700684[133] = 0;
   out_6474961616426700684[134] = 0;
   out_6474961616426700684[135] = 0;
   out_6474961616426700684[136] = 0;
   out_6474961616426700684[137] = 0;
   out_6474961616426700684[138] = 0;
   out_6474961616426700684[139] = 0;
   out_6474961616426700684[140] = 0;
   out_6474961616426700684[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6474961616426700684[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6474961616426700684[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6474961616426700684[144] = 0;
   out_6474961616426700684[145] = 0;
   out_6474961616426700684[146] = 0;
   out_6474961616426700684[147] = 0;
   out_6474961616426700684[148] = 0;
   out_6474961616426700684[149] = 0;
   out_6474961616426700684[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_6474961616426700684[151] = 0;
   out_6474961616426700684[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_6474961616426700684[153] = 0;
   out_6474961616426700684[154] = 1;
   out_6474961616426700684[155] = 0;
   out_6474961616426700684[156] = 0;
   out_6474961616426700684[157] = 0;
   out_6474961616426700684[158] = 0;
   out_6474961616426700684[159] = 0;
   out_6474961616426700684[160] = 0;
   out_6474961616426700684[161] = 0;
   out_6474961616426700684[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_6474961616426700684[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6474961616426700684[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6474961616426700684[165] = 0;
   out_6474961616426700684[166] = 0;
   out_6474961616426700684[167] = 0;
   out_6474961616426700684[168] = 0;
   out_6474961616426700684[169] = 0;
   out_6474961616426700684[170] = 0;
   out_6474961616426700684[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_6474961616426700684[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_6474961616426700684[173] = 0;
   out_6474961616426700684[174] = 0;
   out_6474961616426700684[175] = 0;
   out_6474961616426700684[176] = 1;
   out_6474961616426700684[177] = 0;
   out_6474961616426700684[178] = 0;
   out_6474961616426700684[179] = 0;
   out_6474961616426700684[180] = 0;
   out_6474961616426700684[181] = 0;
   out_6474961616426700684[182] = 0;
   out_6474961616426700684[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_6474961616426700684[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_6474961616426700684[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6474961616426700684[186] = 0;
   out_6474961616426700684[187] = 0;
   out_6474961616426700684[188] = 0;
   out_6474961616426700684[189] = 0;
   out_6474961616426700684[190] = 0;
   out_6474961616426700684[191] = 0;
   out_6474961616426700684[192] = 0;
   out_6474961616426700684[193] = 0;
   out_6474961616426700684[194] = 0;
   out_6474961616426700684[195] = 0;
   out_6474961616426700684[196] = 0;
   out_6474961616426700684[197] = 0;
   out_6474961616426700684[198] = 1;
   out_6474961616426700684[199] = 0;
   out_6474961616426700684[200] = 0;
   out_6474961616426700684[201] = 0;
   out_6474961616426700684[202] = 0;
   out_6474961616426700684[203] = 0;
   out_6474961616426700684[204] = 0;
   out_6474961616426700684[205] = 0;
   out_6474961616426700684[206] = 0;
   out_6474961616426700684[207] = 0;
   out_6474961616426700684[208] = 0;
   out_6474961616426700684[209] = 0;
   out_6474961616426700684[210] = 0;
   out_6474961616426700684[211] = 0;
   out_6474961616426700684[212] = 0;
   out_6474961616426700684[213] = 0;
   out_6474961616426700684[214] = 0;
   out_6474961616426700684[215] = 0;
   out_6474961616426700684[216] = 0;
   out_6474961616426700684[217] = 0;
   out_6474961616426700684[218] = 0;
   out_6474961616426700684[219] = 0;
   out_6474961616426700684[220] = 1;
   out_6474961616426700684[221] = 0;
   out_6474961616426700684[222] = 0;
   out_6474961616426700684[223] = 0;
   out_6474961616426700684[224] = 0;
   out_6474961616426700684[225] = 0;
   out_6474961616426700684[226] = 0;
   out_6474961616426700684[227] = 0;
   out_6474961616426700684[228] = 0;
   out_6474961616426700684[229] = 0;
   out_6474961616426700684[230] = 0;
   out_6474961616426700684[231] = 0;
   out_6474961616426700684[232] = 0;
   out_6474961616426700684[233] = 0;
   out_6474961616426700684[234] = 0;
   out_6474961616426700684[235] = 0;
   out_6474961616426700684[236] = 0;
   out_6474961616426700684[237] = 0;
   out_6474961616426700684[238] = 0;
   out_6474961616426700684[239] = 0;
   out_6474961616426700684[240] = 0;
   out_6474961616426700684[241] = 0;
   out_6474961616426700684[242] = 1;
   out_6474961616426700684[243] = 0;
   out_6474961616426700684[244] = 0;
   out_6474961616426700684[245] = 0;
   out_6474961616426700684[246] = 0;
   out_6474961616426700684[247] = 0;
   out_6474961616426700684[248] = 0;
   out_6474961616426700684[249] = 0;
   out_6474961616426700684[250] = 0;
   out_6474961616426700684[251] = 0;
   out_6474961616426700684[252] = 0;
   out_6474961616426700684[253] = 0;
   out_6474961616426700684[254] = 0;
   out_6474961616426700684[255] = 0;
   out_6474961616426700684[256] = 0;
   out_6474961616426700684[257] = 0;
   out_6474961616426700684[258] = 0;
   out_6474961616426700684[259] = 0;
   out_6474961616426700684[260] = 0;
   out_6474961616426700684[261] = 0;
   out_6474961616426700684[262] = 0;
   out_6474961616426700684[263] = 0;
   out_6474961616426700684[264] = 1;
   out_6474961616426700684[265] = 0;
   out_6474961616426700684[266] = 0;
   out_6474961616426700684[267] = 0;
   out_6474961616426700684[268] = 0;
   out_6474961616426700684[269] = 0;
   out_6474961616426700684[270] = 0;
   out_6474961616426700684[271] = 0;
   out_6474961616426700684[272] = 0;
   out_6474961616426700684[273] = 0;
   out_6474961616426700684[274] = 0;
   out_6474961616426700684[275] = 0;
   out_6474961616426700684[276] = 0;
   out_6474961616426700684[277] = 0;
   out_6474961616426700684[278] = 0;
   out_6474961616426700684[279] = 0;
   out_6474961616426700684[280] = 0;
   out_6474961616426700684[281] = 0;
   out_6474961616426700684[282] = 0;
   out_6474961616426700684[283] = 0;
   out_6474961616426700684[284] = 0;
   out_6474961616426700684[285] = 0;
   out_6474961616426700684[286] = 1;
   out_6474961616426700684[287] = 0;
   out_6474961616426700684[288] = 0;
   out_6474961616426700684[289] = 0;
   out_6474961616426700684[290] = 0;
   out_6474961616426700684[291] = 0;
   out_6474961616426700684[292] = 0;
   out_6474961616426700684[293] = 0;
   out_6474961616426700684[294] = 0;
   out_6474961616426700684[295] = 0;
   out_6474961616426700684[296] = 0;
   out_6474961616426700684[297] = 0;
   out_6474961616426700684[298] = 0;
   out_6474961616426700684[299] = 0;
   out_6474961616426700684[300] = 0;
   out_6474961616426700684[301] = 0;
   out_6474961616426700684[302] = 0;
   out_6474961616426700684[303] = 0;
   out_6474961616426700684[304] = 0;
   out_6474961616426700684[305] = 0;
   out_6474961616426700684[306] = 0;
   out_6474961616426700684[307] = 0;
   out_6474961616426700684[308] = 1;
   out_6474961616426700684[309] = 0;
   out_6474961616426700684[310] = 0;
   out_6474961616426700684[311] = 0;
   out_6474961616426700684[312] = 0;
   out_6474961616426700684[313] = 0;
   out_6474961616426700684[314] = 0;
   out_6474961616426700684[315] = 0;
   out_6474961616426700684[316] = 0;
   out_6474961616426700684[317] = 0;
   out_6474961616426700684[318] = 0;
   out_6474961616426700684[319] = 0;
   out_6474961616426700684[320] = 0;
   out_6474961616426700684[321] = 0;
   out_6474961616426700684[322] = 0;
   out_6474961616426700684[323] = 0;
   out_6474961616426700684[324] = 0;
   out_6474961616426700684[325] = 0;
   out_6474961616426700684[326] = 0;
   out_6474961616426700684[327] = 0;
   out_6474961616426700684[328] = 0;
   out_6474961616426700684[329] = 0;
   out_6474961616426700684[330] = 1;
   out_6474961616426700684[331] = 0;
   out_6474961616426700684[332] = 0;
   out_6474961616426700684[333] = 0;
   out_6474961616426700684[334] = 0;
   out_6474961616426700684[335] = 0;
   out_6474961616426700684[336] = 0;
   out_6474961616426700684[337] = 0;
   out_6474961616426700684[338] = 0;
   out_6474961616426700684[339] = 0;
   out_6474961616426700684[340] = 0;
   out_6474961616426700684[341] = 0;
   out_6474961616426700684[342] = 0;
   out_6474961616426700684[343] = 0;
   out_6474961616426700684[344] = 0;
   out_6474961616426700684[345] = 0;
   out_6474961616426700684[346] = 0;
   out_6474961616426700684[347] = 0;
   out_6474961616426700684[348] = 0;
   out_6474961616426700684[349] = 0;
   out_6474961616426700684[350] = 0;
   out_6474961616426700684[351] = 0;
   out_6474961616426700684[352] = 1;
   out_6474961616426700684[353] = 0;
   out_6474961616426700684[354] = 0;
   out_6474961616426700684[355] = 0;
   out_6474961616426700684[356] = 0;
   out_6474961616426700684[357] = 0;
   out_6474961616426700684[358] = 0;
   out_6474961616426700684[359] = 0;
   out_6474961616426700684[360] = 0;
   out_6474961616426700684[361] = 0;
   out_6474961616426700684[362] = 0;
   out_6474961616426700684[363] = 0;
   out_6474961616426700684[364] = 0;
   out_6474961616426700684[365] = 0;
   out_6474961616426700684[366] = 0;
   out_6474961616426700684[367] = 0;
   out_6474961616426700684[368] = 0;
   out_6474961616426700684[369] = 0;
   out_6474961616426700684[370] = 0;
   out_6474961616426700684[371] = 0;
   out_6474961616426700684[372] = 0;
   out_6474961616426700684[373] = 0;
   out_6474961616426700684[374] = 1;
   out_6474961616426700684[375] = 0;
   out_6474961616426700684[376] = 0;
   out_6474961616426700684[377] = 0;
   out_6474961616426700684[378] = 0;
   out_6474961616426700684[379] = 0;
   out_6474961616426700684[380] = 0;
   out_6474961616426700684[381] = 0;
   out_6474961616426700684[382] = 0;
   out_6474961616426700684[383] = 0;
   out_6474961616426700684[384] = 0;
   out_6474961616426700684[385] = 0;
   out_6474961616426700684[386] = 0;
   out_6474961616426700684[387] = 0;
   out_6474961616426700684[388] = 0;
   out_6474961616426700684[389] = 0;
   out_6474961616426700684[390] = 0;
   out_6474961616426700684[391] = 0;
   out_6474961616426700684[392] = 0;
   out_6474961616426700684[393] = 0;
   out_6474961616426700684[394] = 0;
   out_6474961616426700684[395] = 0;
   out_6474961616426700684[396] = 1;
   out_6474961616426700684[397] = 0;
   out_6474961616426700684[398] = 0;
   out_6474961616426700684[399] = 0;
   out_6474961616426700684[400] = 0;
   out_6474961616426700684[401] = 0;
   out_6474961616426700684[402] = 0;
   out_6474961616426700684[403] = 0;
   out_6474961616426700684[404] = 0;
   out_6474961616426700684[405] = 0;
   out_6474961616426700684[406] = 0;
   out_6474961616426700684[407] = 0;
   out_6474961616426700684[408] = 0;
   out_6474961616426700684[409] = 0;
   out_6474961616426700684[410] = 0;
   out_6474961616426700684[411] = 0;
   out_6474961616426700684[412] = 0;
   out_6474961616426700684[413] = 0;
   out_6474961616426700684[414] = 0;
   out_6474961616426700684[415] = 0;
   out_6474961616426700684[416] = 0;
   out_6474961616426700684[417] = 0;
   out_6474961616426700684[418] = 1;
   out_6474961616426700684[419] = 0;
   out_6474961616426700684[420] = 0;
   out_6474961616426700684[421] = 0;
   out_6474961616426700684[422] = 0;
   out_6474961616426700684[423] = 0;
   out_6474961616426700684[424] = 0;
   out_6474961616426700684[425] = 0;
   out_6474961616426700684[426] = 0;
   out_6474961616426700684[427] = 0;
   out_6474961616426700684[428] = 0;
   out_6474961616426700684[429] = 0;
   out_6474961616426700684[430] = 0;
   out_6474961616426700684[431] = 0;
   out_6474961616426700684[432] = 0;
   out_6474961616426700684[433] = 0;
   out_6474961616426700684[434] = 0;
   out_6474961616426700684[435] = 0;
   out_6474961616426700684[436] = 0;
   out_6474961616426700684[437] = 0;
   out_6474961616426700684[438] = 0;
   out_6474961616426700684[439] = 0;
   out_6474961616426700684[440] = 1;
}
void h_4(double *state, double *unused, double *out_1862989944075393719) {
   out_1862989944075393719[0] = state[10] + state[13];
   out_1862989944075393719[1] = state[11] + state[14];
   out_1862989944075393719[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_9414878055866890) {
   out_9414878055866890[0] = 0;
   out_9414878055866890[1] = 0;
   out_9414878055866890[2] = 0;
   out_9414878055866890[3] = 0;
   out_9414878055866890[4] = 0;
   out_9414878055866890[5] = 0;
   out_9414878055866890[6] = 0;
   out_9414878055866890[7] = 0;
   out_9414878055866890[8] = 0;
   out_9414878055866890[9] = 0;
   out_9414878055866890[10] = 1;
   out_9414878055866890[11] = 0;
   out_9414878055866890[12] = 0;
   out_9414878055866890[13] = 1;
   out_9414878055866890[14] = 0;
   out_9414878055866890[15] = 0;
   out_9414878055866890[16] = 0;
   out_9414878055866890[17] = 0;
   out_9414878055866890[18] = 0;
   out_9414878055866890[19] = 0;
   out_9414878055866890[20] = 0;
   out_9414878055866890[21] = 0;
   out_9414878055866890[22] = 0;
   out_9414878055866890[23] = 0;
   out_9414878055866890[24] = 0;
   out_9414878055866890[25] = 0;
   out_9414878055866890[26] = 0;
   out_9414878055866890[27] = 0;
   out_9414878055866890[28] = 0;
   out_9414878055866890[29] = 0;
   out_9414878055866890[30] = 0;
   out_9414878055866890[31] = 0;
   out_9414878055866890[32] = 0;
   out_9414878055866890[33] = 1;
   out_9414878055866890[34] = 0;
   out_9414878055866890[35] = 0;
   out_9414878055866890[36] = 1;
   out_9414878055866890[37] = 0;
   out_9414878055866890[38] = 0;
   out_9414878055866890[39] = 0;
   out_9414878055866890[40] = 0;
   out_9414878055866890[41] = 0;
   out_9414878055866890[42] = 0;
   out_9414878055866890[43] = 0;
   out_9414878055866890[44] = 0;
   out_9414878055866890[45] = 0;
   out_9414878055866890[46] = 0;
   out_9414878055866890[47] = 0;
   out_9414878055866890[48] = 0;
   out_9414878055866890[49] = 0;
   out_9414878055866890[50] = 0;
   out_9414878055866890[51] = 0;
   out_9414878055866890[52] = 0;
   out_9414878055866890[53] = 0;
   out_9414878055866890[54] = 0;
   out_9414878055866890[55] = 0;
   out_9414878055866890[56] = 1;
   out_9414878055866890[57] = 0;
   out_9414878055866890[58] = 0;
   out_9414878055866890[59] = 1;
   out_9414878055866890[60] = 0;
   out_9414878055866890[61] = 0;
   out_9414878055866890[62] = 0;
   out_9414878055866890[63] = 0;
   out_9414878055866890[64] = 0;
   out_9414878055866890[65] = 0;
}
void h_9(double *state, double *unused, double *out_4605396928884320376) {
   out_4605396928884320376[0] = state[10];
   out_4605396928884320376[1] = state[11];
   out_4605396928884320376[2] = state[12];
}
void H_9(double *state, double *unused, double *out_7277804057208580580) {
   out_7277804057208580580[0] = 0;
   out_7277804057208580580[1] = 0;
   out_7277804057208580580[2] = 0;
   out_7277804057208580580[3] = 0;
   out_7277804057208580580[4] = 0;
   out_7277804057208580580[5] = 0;
   out_7277804057208580580[6] = 0;
   out_7277804057208580580[7] = 0;
   out_7277804057208580580[8] = 0;
   out_7277804057208580580[9] = 0;
   out_7277804057208580580[10] = 1;
   out_7277804057208580580[11] = 0;
   out_7277804057208580580[12] = 0;
   out_7277804057208580580[13] = 0;
   out_7277804057208580580[14] = 0;
   out_7277804057208580580[15] = 0;
   out_7277804057208580580[16] = 0;
   out_7277804057208580580[17] = 0;
   out_7277804057208580580[18] = 0;
   out_7277804057208580580[19] = 0;
   out_7277804057208580580[20] = 0;
   out_7277804057208580580[21] = 0;
   out_7277804057208580580[22] = 0;
   out_7277804057208580580[23] = 0;
   out_7277804057208580580[24] = 0;
   out_7277804057208580580[25] = 0;
   out_7277804057208580580[26] = 0;
   out_7277804057208580580[27] = 0;
   out_7277804057208580580[28] = 0;
   out_7277804057208580580[29] = 0;
   out_7277804057208580580[30] = 0;
   out_7277804057208580580[31] = 0;
   out_7277804057208580580[32] = 0;
   out_7277804057208580580[33] = 1;
   out_7277804057208580580[34] = 0;
   out_7277804057208580580[35] = 0;
   out_7277804057208580580[36] = 0;
   out_7277804057208580580[37] = 0;
   out_7277804057208580580[38] = 0;
   out_7277804057208580580[39] = 0;
   out_7277804057208580580[40] = 0;
   out_7277804057208580580[41] = 0;
   out_7277804057208580580[42] = 0;
   out_7277804057208580580[43] = 0;
   out_7277804057208580580[44] = 0;
   out_7277804057208580580[45] = 0;
   out_7277804057208580580[46] = 0;
   out_7277804057208580580[47] = 0;
   out_7277804057208580580[48] = 0;
   out_7277804057208580580[49] = 0;
   out_7277804057208580580[50] = 0;
   out_7277804057208580580[51] = 0;
   out_7277804057208580580[52] = 0;
   out_7277804057208580580[53] = 0;
   out_7277804057208580580[54] = 0;
   out_7277804057208580580[55] = 0;
   out_7277804057208580580[56] = 1;
   out_7277804057208580580[57] = 0;
   out_7277804057208580580[58] = 0;
   out_7277804057208580580[59] = 0;
   out_7277804057208580580[60] = 0;
   out_7277804057208580580[61] = 0;
   out_7277804057208580580[62] = 0;
   out_7277804057208580580[63] = 0;
   out_7277804057208580580[64] = 0;
   out_7277804057208580580[65] = 0;
}
void h_10(double *state, double *unused, double *out_5199763327996600714) {
   out_5199763327996600714[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_5199763327996600714[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_5199763327996600714[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1882159676693818381) {
   out_1882159676693818381[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1882159676693818381[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1882159676693818381[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1882159676693818381[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1882159676693818381[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1882159676693818381[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1882159676693818381[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1882159676693818381[7] = 0;
   out_1882159676693818381[8] = 0;
   out_1882159676693818381[9] = 0;
   out_1882159676693818381[10] = 0;
   out_1882159676693818381[11] = 0;
   out_1882159676693818381[12] = 0;
   out_1882159676693818381[13] = 0;
   out_1882159676693818381[14] = 0;
   out_1882159676693818381[15] = 0;
   out_1882159676693818381[16] = 1;
   out_1882159676693818381[17] = 0;
   out_1882159676693818381[18] = 0;
   out_1882159676693818381[19] = 1;
   out_1882159676693818381[20] = 0;
   out_1882159676693818381[21] = 0;
   out_1882159676693818381[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1882159676693818381[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1882159676693818381[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1882159676693818381[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1882159676693818381[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1882159676693818381[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1882159676693818381[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1882159676693818381[29] = 0;
   out_1882159676693818381[30] = 0;
   out_1882159676693818381[31] = 0;
   out_1882159676693818381[32] = 0;
   out_1882159676693818381[33] = 0;
   out_1882159676693818381[34] = 0;
   out_1882159676693818381[35] = 0;
   out_1882159676693818381[36] = 0;
   out_1882159676693818381[37] = 0;
   out_1882159676693818381[38] = 0;
   out_1882159676693818381[39] = 1;
   out_1882159676693818381[40] = 0;
   out_1882159676693818381[41] = 0;
   out_1882159676693818381[42] = 1;
   out_1882159676693818381[43] = 0;
   out_1882159676693818381[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1882159676693818381[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1882159676693818381[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1882159676693818381[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1882159676693818381[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1882159676693818381[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1882159676693818381[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1882159676693818381[51] = 0;
   out_1882159676693818381[52] = 0;
   out_1882159676693818381[53] = 0;
   out_1882159676693818381[54] = 0;
   out_1882159676693818381[55] = 0;
   out_1882159676693818381[56] = 0;
   out_1882159676693818381[57] = 0;
   out_1882159676693818381[58] = 0;
   out_1882159676693818381[59] = 0;
   out_1882159676693818381[60] = 0;
   out_1882159676693818381[61] = 0;
   out_1882159676693818381[62] = 1;
   out_1882159676693818381[63] = 0;
   out_1882159676693818381[64] = 0;
   out_1882159676693818381[65] = 1;
}
void h_12(double *state, double *unused, double *out_8147150011647232894) {
   out_8147150011647232894[0] = state[0];
   out_8147150011647232894[1] = state[1];
   out_8147150011647232894[2] = state[2];
}
void H_12(double *state, double *unused, double *out_611684146991726777) {
   out_611684146991726777[0] = 1;
   out_611684146991726777[1] = 0;
   out_611684146991726777[2] = 0;
   out_611684146991726777[3] = 0;
   out_611684146991726777[4] = 0;
   out_611684146991726777[5] = 0;
   out_611684146991726777[6] = 0;
   out_611684146991726777[7] = 0;
   out_611684146991726777[8] = 0;
   out_611684146991726777[9] = 0;
   out_611684146991726777[10] = 0;
   out_611684146991726777[11] = 0;
   out_611684146991726777[12] = 0;
   out_611684146991726777[13] = 0;
   out_611684146991726777[14] = 0;
   out_611684146991726777[15] = 0;
   out_611684146991726777[16] = 0;
   out_611684146991726777[17] = 0;
   out_611684146991726777[18] = 0;
   out_611684146991726777[19] = 0;
   out_611684146991726777[20] = 0;
   out_611684146991726777[21] = 0;
   out_611684146991726777[22] = 0;
   out_611684146991726777[23] = 1;
   out_611684146991726777[24] = 0;
   out_611684146991726777[25] = 0;
   out_611684146991726777[26] = 0;
   out_611684146991726777[27] = 0;
   out_611684146991726777[28] = 0;
   out_611684146991726777[29] = 0;
   out_611684146991726777[30] = 0;
   out_611684146991726777[31] = 0;
   out_611684146991726777[32] = 0;
   out_611684146991726777[33] = 0;
   out_611684146991726777[34] = 0;
   out_611684146991726777[35] = 0;
   out_611684146991726777[36] = 0;
   out_611684146991726777[37] = 0;
   out_611684146991726777[38] = 0;
   out_611684146991726777[39] = 0;
   out_611684146991726777[40] = 0;
   out_611684146991726777[41] = 0;
   out_611684146991726777[42] = 0;
   out_611684146991726777[43] = 0;
   out_611684146991726777[44] = 0;
   out_611684146991726777[45] = 0;
   out_611684146991726777[46] = 1;
   out_611684146991726777[47] = 0;
   out_611684146991726777[48] = 0;
   out_611684146991726777[49] = 0;
   out_611684146991726777[50] = 0;
   out_611684146991726777[51] = 0;
   out_611684146991726777[52] = 0;
   out_611684146991726777[53] = 0;
   out_611684146991726777[54] = 0;
   out_611684146991726777[55] = 0;
   out_611684146991726777[56] = 0;
   out_611684146991726777[57] = 0;
   out_611684146991726777[58] = 0;
   out_611684146991726777[59] = 0;
   out_611684146991726777[60] = 0;
   out_611684146991726777[61] = 0;
   out_611684146991726777[62] = 0;
   out_611684146991726777[63] = 0;
   out_611684146991726777[64] = 0;
   out_611684146991726777[65] = 0;
}
void h_35(double *state, double *unused, double *out_4762658678134650207) {
   out_4762658678134650207[0] = state[7];
   out_4762658678134650207[1] = state[8];
   out_4762658678134650207[2] = state[9];
}
void H_35(double *state, double *unused, double *out_3357247179316740486) {
   out_3357247179316740486[0] = 0;
   out_3357247179316740486[1] = 0;
   out_3357247179316740486[2] = 0;
   out_3357247179316740486[3] = 0;
   out_3357247179316740486[4] = 0;
   out_3357247179316740486[5] = 0;
   out_3357247179316740486[6] = 0;
   out_3357247179316740486[7] = 1;
   out_3357247179316740486[8] = 0;
   out_3357247179316740486[9] = 0;
   out_3357247179316740486[10] = 0;
   out_3357247179316740486[11] = 0;
   out_3357247179316740486[12] = 0;
   out_3357247179316740486[13] = 0;
   out_3357247179316740486[14] = 0;
   out_3357247179316740486[15] = 0;
   out_3357247179316740486[16] = 0;
   out_3357247179316740486[17] = 0;
   out_3357247179316740486[18] = 0;
   out_3357247179316740486[19] = 0;
   out_3357247179316740486[20] = 0;
   out_3357247179316740486[21] = 0;
   out_3357247179316740486[22] = 0;
   out_3357247179316740486[23] = 0;
   out_3357247179316740486[24] = 0;
   out_3357247179316740486[25] = 0;
   out_3357247179316740486[26] = 0;
   out_3357247179316740486[27] = 0;
   out_3357247179316740486[28] = 0;
   out_3357247179316740486[29] = 0;
   out_3357247179316740486[30] = 1;
   out_3357247179316740486[31] = 0;
   out_3357247179316740486[32] = 0;
   out_3357247179316740486[33] = 0;
   out_3357247179316740486[34] = 0;
   out_3357247179316740486[35] = 0;
   out_3357247179316740486[36] = 0;
   out_3357247179316740486[37] = 0;
   out_3357247179316740486[38] = 0;
   out_3357247179316740486[39] = 0;
   out_3357247179316740486[40] = 0;
   out_3357247179316740486[41] = 0;
   out_3357247179316740486[42] = 0;
   out_3357247179316740486[43] = 0;
   out_3357247179316740486[44] = 0;
   out_3357247179316740486[45] = 0;
   out_3357247179316740486[46] = 0;
   out_3357247179316740486[47] = 0;
   out_3357247179316740486[48] = 0;
   out_3357247179316740486[49] = 0;
   out_3357247179316740486[50] = 0;
   out_3357247179316740486[51] = 0;
   out_3357247179316740486[52] = 0;
   out_3357247179316740486[53] = 1;
   out_3357247179316740486[54] = 0;
   out_3357247179316740486[55] = 0;
   out_3357247179316740486[56] = 0;
   out_3357247179316740486[57] = 0;
   out_3357247179316740486[58] = 0;
   out_3357247179316740486[59] = 0;
   out_3357247179316740486[60] = 0;
   out_3357247179316740486[61] = 0;
   out_3357247179316740486[62] = 0;
   out_3357247179316740486[63] = 0;
   out_3357247179316740486[64] = 0;
   out_3357247179316740486[65] = 0;
}
void h_32(double *state, double *unused, double *out_8816355352428884514) {
   out_8816355352428884514[0] = state[3];
   out_8816355352428884514[1] = state[4];
   out_8816355352428884514[2] = state[5];
   out_8816355352428884514[3] = state[6];
}
void H_32(double *state, double *unused, double *out_470765756468285990) {
   out_470765756468285990[0] = 0;
   out_470765756468285990[1] = 0;
   out_470765756468285990[2] = 0;
   out_470765756468285990[3] = 1;
   out_470765756468285990[4] = 0;
   out_470765756468285990[5] = 0;
   out_470765756468285990[6] = 0;
   out_470765756468285990[7] = 0;
   out_470765756468285990[8] = 0;
   out_470765756468285990[9] = 0;
   out_470765756468285990[10] = 0;
   out_470765756468285990[11] = 0;
   out_470765756468285990[12] = 0;
   out_470765756468285990[13] = 0;
   out_470765756468285990[14] = 0;
   out_470765756468285990[15] = 0;
   out_470765756468285990[16] = 0;
   out_470765756468285990[17] = 0;
   out_470765756468285990[18] = 0;
   out_470765756468285990[19] = 0;
   out_470765756468285990[20] = 0;
   out_470765756468285990[21] = 0;
   out_470765756468285990[22] = 0;
   out_470765756468285990[23] = 0;
   out_470765756468285990[24] = 0;
   out_470765756468285990[25] = 0;
   out_470765756468285990[26] = 1;
   out_470765756468285990[27] = 0;
   out_470765756468285990[28] = 0;
   out_470765756468285990[29] = 0;
   out_470765756468285990[30] = 0;
   out_470765756468285990[31] = 0;
   out_470765756468285990[32] = 0;
   out_470765756468285990[33] = 0;
   out_470765756468285990[34] = 0;
   out_470765756468285990[35] = 0;
   out_470765756468285990[36] = 0;
   out_470765756468285990[37] = 0;
   out_470765756468285990[38] = 0;
   out_470765756468285990[39] = 0;
   out_470765756468285990[40] = 0;
   out_470765756468285990[41] = 0;
   out_470765756468285990[42] = 0;
   out_470765756468285990[43] = 0;
   out_470765756468285990[44] = 0;
   out_470765756468285990[45] = 0;
   out_470765756468285990[46] = 0;
   out_470765756468285990[47] = 0;
   out_470765756468285990[48] = 0;
   out_470765756468285990[49] = 1;
   out_470765756468285990[50] = 0;
   out_470765756468285990[51] = 0;
   out_470765756468285990[52] = 0;
   out_470765756468285990[53] = 0;
   out_470765756468285990[54] = 0;
   out_470765756468285990[55] = 0;
   out_470765756468285990[56] = 0;
   out_470765756468285990[57] = 0;
   out_470765756468285990[58] = 0;
   out_470765756468285990[59] = 0;
   out_470765756468285990[60] = 0;
   out_470765756468285990[61] = 0;
   out_470765756468285990[62] = 0;
   out_470765756468285990[63] = 0;
   out_470765756468285990[64] = 0;
   out_470765756468285990[65] = 0;
   out_470765756468285990[66] = 0;
   out_470765756468285990[67] = 0;
   out_470765756468285990[68] = 0;
   out_470765756468285990[69] = 0;
   out_470765756468285990[70] = 0;
   out_470765756468285990[71] = 0;
   out_470765756468285990[72] = 1;
   out_470765756468285990[73] = 0;
   out_470765756468285990[74] = 0;
   out_470765756468285990[75] = 0;
   out_470765756468285990[76] = 0;
   out_470765756468285990[77] = 0;
   out_470765756468285990[78] = 0;
   out_470765756468285990[79] = 0;
   out_470765756468285990[80] = 0;
   out_470765756468285990[81] = 0;
   out_470765756468285990[82] = 0;
   out_470765756468285990[83] = 0;
   out_470765756468285990[84] = 0;
   out_470765756468285990[85] = 0;
   out_470765756468285990[86] = 0;
   out_470765756468285990[87] = 0;
}
void h_13(double *state, double *unused, double *out_1744922066508020115) {
   out_1744922066508020115[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_1744922066508020115[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_1744922066508020115[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_4197267988880179988) {
   out_4197267988880179988[0] = 0;
   out_4197267988880179988[1] = 0;
   out_4197267988880179988[2] = 0;
   out_4197267988880179988[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4197267988880179988[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4197267988880179988[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_4197267988880179988[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4197267988880179988[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_4197267988880179988[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_4197267988880179988[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_4197267988880179988[10] = 0;
   out_4197267988880179988[11] = 0;
   out_4197267988880179988[12] = 0;
   out_4197267988880179988[13] = 0;
   out_4197267988880179988[14] = 0;
   out_4197267988880179988[15] = 0;
   out_4197267988880179988[16] = 0;
   out_4197267988880179988[17] = 0;
   out_4197267988880179988[18] = 0;
   out_4197267988880179988[19] = 0;
   out_4197267988880179988[20] = 0;
   out_4197267988880179988[21] = 0;
   out_4197267988880179988[22] = 0;
   out_4197267988880179988[23] = 0;
   out_4197267988880179988[24] = 0;
   out_4197267988880179988[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_4197267988880179988[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4197267988880179988[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4197267988880179988[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_4197267988880179988[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_4197267988880179988[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_4197267988880179988[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_4197267988880179988[32] = 0;
   out_4197267988880179988[33] = 0;
   out_4197267988880179988[34] = 0;
   out_4197267988880179988[35] = 0;
   out_4197267988880179988[36] = 0;
   out_4197267988880179988[37] = 0;
   out_4197267988880179988[38] = 0;
   out_4197267988880179988[39] = 0;
   out_4197267988880179988[40] = 0;
   out_4197267988880179988[41] = 0;
   out_4197267988880179988[42] = 0;
   out_4197267988880179988[43] = 0;
   out_4197267988880179988[44] = 0;
   out_4197267988880179988[45] = 0;
   out_4197267988880179988[46] = 0;
   out_4197267988880179988[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_4197267988880179988[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_4197267988880179988[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_4197267988880179988[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_4197267988880179988[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_4197267988880179988[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_4197267988880179988[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_4197267988880179988[54] = 0;
   out_4197267988880179988[55] = 0;
   out_4197267988880179988[56] = 0;
   out_4197267988880179988[57] = 0;
   out_4197267988880179988[58] = 0;
   out_4197267988880179988[59] = 0;
   out_4197267988880179988[60] = 0;
   out_4197267988880179988[61] = 0;
   out_4197267988880179988[62] = 0;
   out_4197267988880179988[63] = 0;
   out_4197267988880179988[64] = 0;
   out_4197267988880179988[65] = 0;
}
void h_14(double *state, double *unused, double *out_4605396928884320376) {
   out_4605396928884320376[0] = state[10];
   out_4605396928884320376[1] = state[11];
   out_4605396928884320376[2] = state[12];
}
void H_14(double *state, double *unused, double *out_7277804057208580580) {
   out_7277804057208580580[0] = 0;
   out_7277804057208580580[1] = 0;
   out_7277804057208580580[2] = 0;
   out_7277804057208580580[3] = 0;
   out_7277804057208580580[4] = 0;
   out_7277804057208580580[5] = 0;
   out_7277804057208580580[6] = 0;
   out_7277804057208580580[7] = 0;
   out_7277804057208580580[8] = 0;
   out_7277804057208580580[9] = 0;
   out_7277804057208580580[10] = 1;
   out_7277804057208580580[11] = 0;
   out_7277804057208580580[12] = 0;
   out_7277804057208580580[13] = 0;
   out_7277804057208580580[14] = 0;
   out_7277804057208580580[15] = 0;
   out_7277804057208580580[16] = 0;
   out_7277804057208580580[17] = 0;
   out_7277804057208580580[18] = 0;
   out_7277804057208580580[19] = 0;
   out_7277804057208580580[20] = 0;
   out_7277804057208580580[21] = 0;
   out_7277804057208580580[22] = 0;
   out_7277804057208580580[23] = 0;
   out_7277804057208580580[24] = 0;
   out_7277804057208580580[25] = 0;
   out_7277804057208580580[26] = 0;
   out_7277804057208580580[27] = 0;
   out_7277804057208580580[28] = 0;
   out_7277804057208580580[29] = 0;
   out_7277804057208580580[30] = 0;
   out_7277804057208580580[31] = 0;
   out_7277804057208580580[32] = 0;
   out_7277804057208580580[33] = 1;
   out_7277804057208580580[34] = 0;
   out_7277804057208580580[35] = 0;
   out_7277804057208580580[36] = 0;
   out_7277804057208580580[37] = 0;
   out_7277804057208580580[38] = 0;
   out_7277804057208580580[39] = 0;
   out_7277804057208580580[40] = 0;
   out_7277804057208580580[41] = 0;
   out_7277804057208580580[42] = 0;
   out_7277804057208580580[43] = 0;
   out_7277804057208580580[44] = 0;
   out_7277804057208580580[45] = 0;
   out_7277804057208580580[46] = 0;
   out_7277804057208580580[47] = 0;
   out_7277804057208580580[48] = 0;
   out_7277804057208580580[49] = 0;
   out_7277804057208580580[50] = 0;
   out_7277804057208580580[51] = 0;
   out_7277804057208580580[52] = 0;
   out_7277804057208580580[53] = 0;
   out_7277804057208580580[54] = 0;
   out_7277804057208580580[55] = 0;
   out_7277804057208580580[56] = 1;
   out_7277804057208580580[57] = 0;
   out_7277804057208580580[58] = 0;
   out_7277804057208580580[59] = 0;
   out_7277804057208580580[60] = 0;
   out_7277804057208580580[61] = 0;
   out_7277804057208580580[62] = 0;
   out_7277804057208580580[63] = 0;
   out_7277804057208580580[64] = 0;
   out_7277804057208580580[65] = 0;
}
void h_33(double *state, double *unused, double *out_5962039194593263968) {
   out_5962039194593263968[0] = state[16];
   out_5962039194593263968[1] = state[17];
   out_5962039194593263968[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6507804183955598090) {
   out_6507804183955598090[0] = 0;
   out_6507804183955598090[1] = 0;
   out_6507804183955598090[2] = 0;
   out_6507804183955598090[3] = 0;
   out_6507804183955598090[4] = 0;
   out_6507804183955598090[5] = 0;
   out_6507804183955598090[6] = 0;
   out_6507804183955598090[7] = 0;
   out_6507804183955598090[8] = 0;
   out_6507804183955598090[9] = 0;
   out_6507804183955598090[10] = 0;
   out_6507804183955598090[11] = 0;
   out_6507804183955598090[12] = 0;
   out_6507804183955598090[13] = 0;
   out_6507804183955598090[14] = 0;
   out_6507804183955598090[15] = 0;
   out_6507804183955598090[16] = 1;
   out_6507804183955598090[17] = 0;
   out_6507804183955598090[18] = 0;
   out_6507804183955598090[19] = 0;
   out_6507804183955598090[20] = 0;
   out_6507804183955598090[21] = 0;
   out_6507804183955598090[22] = 0;
   out_6507804183955598090[23] = 0;
   out_6507804183955598090[24] = 0;
   out_6507804183955598090[25] = 0;
   out_6507804183955598090[26] = 0;
   out_6507804183955598090[27] = 0;
   out_6507804183955598090[28] = 0;
   out_6507804183955598090[29] = 0;
   out_6507804183955598090[30] = 0;
   out_6507804183955598090[31] = 0;
   out_6507804183955598090[32] = 0;
   out_6507804183955598090[33] = 0;
   out_6507804183955598090[34] = 0;
   out_6507804183955598090[35] = 0;
   out_6507804183955598090[36] = 0;
   out_6507804183955598090[37] = 0;
   out_6507804183955598090[38] = 0;
   out_6507804183955598090[39] = 1;
   out_6507804183955598090[40] = 0;
   out_6507804183955598090[41] = 0;
   out_6507804183955598090[42] = 0;
   out_6507804183955598090[43] = 0;
   out_6507804183955598090[44] = 0;
   out_6507804183955598090[45] = 0;
   out_6507804183955598090[46] = 0;
   out_6507804183955598090[47] = 0;
   out_6507804183955598090[48] = 0;
   out_6507804183955598090[49] = 0;
   out_6507804183955598090[50] = 0;
   out_6507804183955598090[51] = 0;
   out_6507804183955598090[52] = 0;
   out_6507804183955598090[53] = 0;
   out_6507804183955598090[54] = 0;
   out_6507804183955598090[55] = 0;
   out_6507804183955598090[56] = 0;
   out_6507804183955598090[57] = 0;
   out_6507804183955598090[58] = 0;
   out_6507804183955598090[59] = 0;
   out_6507804183955598090[60] = 0;
   out_6507804183955598090[61] = 0;
   out_6507804183955598090[62] = 1;
   out_6507804183955598090[63] = 0;
   out_6507804183955598090[64] = 0;
   out_6507804183955598090[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_8847127420563689055) {
  H(in_vec, out_8847127420563689055);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_4701037009460637038) {
  err_fun(nom_x, delta_x, out_4701037009460637038);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7553325162373803668) {
  inv_err_fun(nom_x, true_x, out_7553325162373803668);
}
void live_H_mod_fun(double *state, double *out_845521510415997869) {
  H_mod_fun(state, out_845521510415997869);
}
void live_f_fun(double *state, double dt, double *out_8787986898054269099) {
  f_fun(state,  dt, out_8787986898054269099);
}
void live_F_fun(double *state, double dt, double *out_6474961616426700684) {
  F_fun(state,  dt, out_6474961616426700684);
}
void live_h_4(double *state, double *unused, double *out_1862989944075393719) {
  h_4(state, unused, out_1862989944075393719);
}
void live_H_4(double *state, double *unused, double *out_9414878055866890) {
  H_4(state, unused, out_9414878055866890);
}
void live_h_9(double *state, double *unused, double *out_4605396928884320376) {
  h_9(state, unused, out_4605396928884320376);
}
void live_H_9(double *state, double *unused, double *out_7277804057208580580) {
  H_9(state, unused, out_7277804057208580580);
}
void live_h_10(double *state, double *unused, double *out_5199763327996600714) {
  h_10(state, unused, out_5199763327996600714);
}
void live_H_10(double *state, double *unused, double *out_1882159676693818381) {
  H_10(state, unused, out_1882159676693818381);
}
void live_h_12(double *state, double *unused, double *out_8147150011647232894) {
  h_12(state, unused, out_8147150011647232894);
}
void live_H_12(double *state, double *unused, double *out_611684146991726777) {
  H_12(state, unused, out_611684146991726777);
}
void live_h_35(double *state, double *unused, double *out_4762658678134650207) {
  h_35(state, unused, out_4762658678134650207);
}
void live_H_35(double *state, double *unused, double *out_3357247179316740486) {
  H_35(state, unused, out_3357247179316740486);
}
void live_h_32(double *state, double *unused, double *out_8816355352428884514) {
  h_32(state, unused, out_8816355352428884514);
}
void live_H_32(double *state, double *unused, double *out_470765756468285990) {
  H_32(state, unused, out_470765756468285990);
}
void live_h_13(double *state, double *unused, double *out_1744922066508020115) {
  h_13(state, unused, out_1744922066508020115);
}
void live_H_13(double *state, double *unused, double *out_4197267988880179988) {
  H_13(state, unused, out_4197267988880179988);
}
void live_h_14(double *state, double *unused, double *out_4605396928884320376) {
  h_14(state, unused, out_4605396928884320376);
}
void live_H_14(double *state, double *unused, double *out_7277804057208580580) {
  H_14(state, unused, out_7277804057208580580);
}
void live_h_33(double *state, double *unused, double *out_5962039194593263968) {
  h_33(state, unused, out_5962039194593263968);
}
void live_H_33(double *state, double *unused, double *out_6507804183955598090) {
  H_33(state, unused, out_6507804183955598090);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
